% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BuildResultsDataSet.R, R/Randomize.R
\name{BuildResultsDataSet}
\alias{BuildResultsDataSet}
\alias{Randomize}
\title{BuildResultsDataSet}
\usage{
BuildResultsDataSet(strMainResultsFile, vStrISAResultsFile, vISANumber)

Randomize(cRandomizer, vISAStatus, dCurrentTime, nPrintDetail)
}
\arguments{
\item{strMainResultsFile}{The main output file produced when running a simulation.  Typically, it is found in the out/ subdirectory.}

\item{vStrISAResultsFile}{The file that contains the output from in ISA.  For ISA XXX it is typically the ISAXXX/ subdirectory.}

\item{vISANumber}{{An integer that will be used to prefix all of the ISA output variables names.  For example, if nISANumber =1, then all variables names
in the file will be prefixed with ISA1.}}
}
\description{
{This function is used to read in the input files and created a combined output file.    }

{ Randomize should return a list with at least the following items
 nTrt - The treatment within the ISA that the patient should receive
 nISA - The index of the ISA
 cISARand - the same is cISARand but if it is updates this allows the caller to get the update.
 For a platform trial the randomization is a two step process.  The two steps are as follows:
      1.  First  randomize between the ISAs.
              To do this RandomizeBetweenISA is called and the class( cRandomizer ) will determine which version of this function
              is called.  For example, if class( cRandomzier ) = "Equal" see RandomizeBetweenISA.Equal() for that definition.
              Each ISA RandomzieBetweenISA function will return an integer nISA to indicate which ISA the patient was randomized to.
      2.  Randomize within the ISA.
              To do this RandomizeWithinISA will be called and the class( cRandomzier[[ nISA ]] ) which specific randomizer is called.
  }
}
